---
# tasks file for docker | Debian OS

- name: Debian | Creating group "{{ docker_group }}" as a pre-requisite for docker
  group:
    name: "{{ docker_group }}"
    state: "{{ docker_group_desired_state }}"

- name: Debian | Adding (or creating if doesn't exist) desired user "{{ docker_user }}"  to put in group "{{ docker_group }}".
  user:
    name: "{{ docker_user }}"
    comment: Docker user
    group: "{{ docker_group }}"
    home: "{{ docker_user_home }}"
    shell: "{{ docker_user_shell }}"
    state: "{{ docker_user_desired_state }}"

- name: Debian | Installing {{ docker_debian_pre_reqs }}
  apt:
    name: "{{ docker_debian_pre_reqs }}"
    state: "{{ docker_debian_pre_reqs_desired_state }}"
    force_apt_get: yes
    update_cache: yes

- name: Debian | Add gpg signing key for {{ docker_apps }}.
  apt_key:
    # url: "{{ docker_repo_debian_gpg_key }}"
    url: "{{ docker_repo_gpg_key }}"
    state: present
#   when: ansible_distribution == "Debian"

# - name: Ubuntu | Add gpg signing key for {{ docker_apps }}.
#   apt_key:
#     url: "{{ docker_repo_ubuntu_gpg_key }}"
#     state: present
#   when: ansible_distribution == "Ubuntu"

- name: Debian | Adding docker repository.
  apt_repository:
    repo: "{{ docker_repo_debian }}"
    state: "{{ docker_repo_debian_desired_state }}"
    filename: "{{ docker_repo_debian_filename }}"
    codename: "{{ ansible_lsb['codename'] }}"
    update_cache: yes
#   when: ansible_distribution == "Debian"

# - name: Ubuntu | Adding docker repository.
#   apt_repository:
#     repo: "{{ docker_repo_ubuntu }}"
#     state: "{{ docker_repo_ubuntu_desired_state }}"
#     filename: "{{ docker_repo_ubuntu_filename }}"
#     codename: "{{ ansible_lsb['codename'] }}"
#     update_cache: yes
#   when: ansible_distribution == "Ubuntu"

- name: Debian | Installing {{ docker_apps }}
  apt:
    name: "{{ docker_apps }}"
    state: "{{ docker_apps_desired_state }}"
    force_apt_get: yes
    update_cache: yes
  notify:
    - "set_{{ docker_service_name }}_service_state"
    - "set_{{ docker_service_name }}_service_boot_state"
